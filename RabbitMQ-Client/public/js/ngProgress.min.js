angular.module('ngProgress.provider',['ngProgress.directive']).provider('ngProgress',function(){'use strict';this.autoStyle=true;this.count=0;this.height='2px';this.color='firebrick';this.$get=['$document','$window','$compile','$rootScope','$timeout',function($document,$window,$compile,$rootScope,$timeout){var count=this.count,height=this.height,color=this.color,$scope=$rootScope,parent=$document.find('body')[0];var progressbarEl=$compile('<ng-progress></ng-progress>')($scope);parent.appendChild(progressbarEl[0]);$scope.count=count;if(height!==undefined){progressbarEl.eq(0).children().css('height',height);}
if(color!==undefined){progressbarEl.eq(0).children().css('background-color',color);progressbarEl.eq(0).children().css('color',color);}
var intervalCounterId=0;var animation;return{start:function(){this.show();var self=this;clearInterval(intervalCounterId);intervalCounterId=setInterval(function(){if(isNaN(count)){clearInterval(intervalCounterId);count=0;self.hide();}else{var remaining=100-count;count=count+(0.15*Math.pow(1-Math.sqrt(remaining),2));self.updateCount(count);}},200);},updateCount:function(new_count){$scope.count=new_count;if(!$scope.$$phase){$scope.$apply();}},height:function(new_height){if(new_height!==undefined){height=new_height;$scope.height=height;if(!$scope.$$phase){$scope.$apply();}}
return height;},color:function(new_color){if(new_color!==undefined){color=new_color;$scope.color=color;if(!$scope.$$phase){$scope.$apply();}}
return color;},hide:function(){progressbarEl.children().css('opacity','0');var self=this;self.animate(function(){progressbarEl.children().css('width','0%');self.animate(function(){self.show();},500);},500);},show:function(){var self=this;self.animate(function(){progressbarEl.children().css('opacity','1');},100);},animate:function(fn,time){if(animation){$timeout.cancel(animation);}
animation=$timeout(fn,time);},status:function(){return count;},stop:function(){clearInterval(intervalCounterId);},set:function(new_count){this.show();this.updateCount(new_count);count=new_count;clearInterval(intervalCounterId);return count;},css:function(args){return progressbarEl.children().css(args);},reset:function(){clearInterval(intervalCounterId);count=0;this.updateCount(count);return 0;},complete:function(){count=100;this.updateCount(count);var self=this;clearInterval(intervalCounterId);$timeout(function(){self.hide();$timeout(function(){count=0;self.updateCount(count);},500);},1000);return count;},setParent:function(newParent){if(newParent===null||newParent===undefined){throw new Error('Provide a valid parent of type HTMLElement');}
if(parent!==null&&parent!==undefined){parent.removeChild(progressbarEl[0]);}
parent=newParent;parent.appendChild(progressbarEl[0]);},getDomElement:function(){return progressbarEl;}};}];this.setColor=function(color){if(color!==undefined){this.color=color;}
return this.color;};this.setHeight=function(height){if(height!==undefined){this.height=height;}
return this.height;};});angular.module('ngProgress.directive',[]).directive('ngProgress',["$window","$rootScope",function($window,$rootScope){var directiveObj={replace:true,restrict:'E',link:function($scope,$element,$attrs,$controller){$rootScope.$watch('count',function(newVal){if(newVal!==undefined||newVal!==null){$scope.counter=newVal;$element.eq(0).children().css('width',newVal+'%');}});$rootScope.$watch('color',function(newVal){if(newVal!==undefined||newVal!==null){$scope.color=newVal;$element.eq(0).children().css('background-color',newVal);$element.eq(0).children().css('color',newVal);}});$rootScope.$watch('height',function(newVal){if(newVal!==undefined||newVal!==null){$scope.height=newVal;$element.eq(0).children().css('height',newVal);}});},template:'<div id="ngProgress-container"><div id="ngProgress"></div></div>'};return directiveObj;}]);angular.module('ngProgress',['ngProgress.directive','ngProgress.provider']);